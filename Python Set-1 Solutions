#Fibonacci series
def fibonacci_series(nterms):
    n1 =0
    n2 = 1
    count = 0
    
    if nterms <= 0 :
        print("Please Enter a positive number")
    elif nterms == 1:
        print("Fibonacci sequence upto",nterms,":")
        print(n1)
    else:
        print("Fibonacci sequence upto",nterms,":")
        while count < nterms:
            print(n1,end=' , ')
            nth = n1 + n2
            # update values
            n1 = n2
            n2 = nth
            count += 1
            
            
fibonacci_series(10)

def bubbleSort(arr):
    n = len(arr)
    # Traverse through all array elements
    for i in range(n):
        for j in range(0, n-i-1):
            if arr[j] > arr[j+1] :
                arr[j], arr[j+1] = arr[j+1], arr[j]
    print ("Sorted array is:")
    for i in range(len(arr)):
        print ("%d" %arr[i]), 
                
arr = [64, 34, 25, 12, 22, 11, 90]
bubbleSort(arr)

#Unique Characters
word = 'abcss'
reduced_word = ''.join(
    [char for index, char in enumerate(word) if char not in word[0:index]])
if word == reduced_word:
    print(True)
else:
    print(False)
    
#Remove Duplicates from the list
def RemoveDuplicates(n): 
    final_list = [] 
    for num in n: 
        if num not in final_list: 
            final_list.append(num) 
    print(len(final_list))

n = [1,1,3,4] 
RemoveDuplicates(n)

#Count the Characters in a String
string = 'a0kkka0hdhdra0'
print(string.count('a'))
 
#Count uppercase and lowercase Characters
string=input("Enter string:")
upperCaseCount=0
lowerCaseCount=0
for i in string:
    if(i.islower()):
        lowerCaseCount=lowerCaseCount+1
    elif(i.isupper()):
        upperCaseCount=upperCaseCount+1
print("The number of lowercase characters in ",string," :",lowerCaseCount)
print("The number of uppercase characters in ",string," :",upperCaseCount)
    

#assertIn(my_integer, range(-5, 5))

#Overriding Method
class Robot:
    def action(self):
        print('Robot action')

class HelloRobot(Robot):
    def action(self):
        print('Hello world')

class DummyRobot(Robot):
    def start(self):
        print('Started.')

r = HelloRobot()
d = DummyRobot()

r.action()
d.action()
    
    

